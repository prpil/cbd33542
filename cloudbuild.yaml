steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/planar-airship-434723-g8/myapp:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/planar-airship-434723-g8/myapp:$SHORT_SHA']

  # Step 3: Update the Kubernetes deployment to use the new image
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/python-app'   # Updated to match deployment name in your YAML
      - 'backend=gcr.io/planar-airship-434723-g8/myapp:$SHORT_SHA'  # Backend image update
      - 'frontend=gcr.io/planar-airship-434723-g8/myapp:$SHORT_SHA' # Frontend image update
      - '--namespace=default'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'

images:
  - 'gcr.io/planar-airship-434723-g8/myapp:$SHORT_SHA'

substitutions:
  _ZONE: 'us-central1-a'
  _CLUSTER_NAME: 'my-cluster'
